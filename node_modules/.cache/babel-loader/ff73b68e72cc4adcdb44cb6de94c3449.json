{"ast":null,"code":"import { getUserToken } from \"./auth\";\nexport const API_URL = window.location.hostname === 'docefit-deployed-front' ? \"docefit-deployd-backend\" : \"http://localhost:3001\"; // Custom API error to throw\n\nfunction ApiError(message, data, status) {\n  let response = null;\n  let isObject = false; // We are trying to parse response\n\n  try {\n    response = JSON.parse(data);\n    isObject = true;\n  } catch (e) {\n    response = data;\n  }\n\n  this.response = response;\n  this.message = message;\n  this.status = status;\n\n  this.toString = function () {\n    return `${this.message}\\nResponse:\\n${isObject ? JSON.stringify(this.response, null, 2) : this.response}`;\n  };\n} // API wrapper function\n\n\n_c = ApiError;\n\nconst fetchResource = function () {\n  let method = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"GET\";\n  let path = arguments.length > 1 ? arguments[1] : undefined;\n  let userOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // Define default options\n  const defaultOptions = {\n    mode: 'cors',\n    method\n  }; // Define default headers\n\n  const defaultHeaders = {\n    \"content-type\": 'application/json',\n    \"authorization\": `Bearer ${getUserToken()}`\n  };\n  const options = { // Merge options\n    ...defaultOptions,\n    ...userOptions,\n    // Merge headers\n    headers: { ...defaultHeaders,\n      ...userOptions.headers\n    }\n  }; // Build Url\n\n  const url = `${API_URL}/${path}`; // Detect is we are uploading a file\n\n  const isFile = options.body instanceof File; // Stringify JSON data\n  // If body is not a file\n\n  if (options.body && typeof options.body === 'object' && !isFile) {\n    options.body = JSON.stringify(options.body);\n  } // Variable which will be used for storing response\n\n\n  let response = null;\n  return fetch(url, options).then(responseObject => {\n    // Saving response for later use in lower scopes\n    response = responseObject; // HTTP unauthorized\n\n    if (response.status === 401) {\n      // Handle unauthorized requests\n      // Maybe redirect to login page?\n      return {\n        authError: true\n      };\n    } // Get response as json\n\n\n    return response.json();\n  }) // \"parsedResponse\" will be either text or javascript object depending if\n  // \"response.text()\" or \"response.json()\" got called in the upper scope\n  .then(parsedResponse => {\n    // Check for HTTP error codes\n    if (response.status < 200 || response.status >= 300) {\n      // Throw error\n      throw parsedResponse;\n    } // Request succeeded\n\n\n    return parsedResponse;\n  }).catch(error => {\n    // Throw custom API error\n    // If response exists it means HTTP error occurred\n    if (response) {\n      throw new ApiError(`Request failed with status ${response.status}.`, error, response.status);\n    } else {\n      throw new ApiError(error.toString(), null, 'REQUEST_FAILED');\n    }\n  });\n};\n\nexport default fetchResource;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiError\");","map":{"version":3,"names":["getUserToken","API_URL","window","location","hostname","ApiError","message","data","status","response","isObject","JSON","parse","e","toString","stringify","fetchResource","method","path","userOptions","defaultOptions","mode","defaultHeaders","options","headers","url","isFile","body","File","fetch","then","responseObject","authError","json","parsedResponse","catch","error"],"sources":["/Users/maryliz/repoMary/docefit/frontend/src/api/index.js"],"sourcesContent":["import {getUserToken} from \"./auth\";\n\nexport const API_URL =  window.location.hostname === 'docefit-deployed-front' ? \"docefit-deployd-backend\" : \"http://localhost:3001\";\n// Custom API error to throw\nfunction ApiError(message, data, status) {\n    let response = null;\n    let isObject = false;\n\n    // We are trying to parse response\n    try {\n        response = JSON.parse(data);\n        isObject = true;\n    } catch (e) {\n        response = data;\n    }\n\n    this.response = response;\n    this.message = message;\n    this.status = status;\n    this.toString = function () {\n        return `${ this.message }\\nResponse:\\n${ isObject ? JSON.stringify(this.response, null, 2) : this.response }`;\n    };\n}\n\n// API wrapper function\nconst fetchResource = (method = \"GET\", path, userOptions = {}) => {\n    // Define default options\n    const defaultOptions = {\n        mode: 'cors',\n        method,\n    };\n    // Define default headers\n    const defaultHeaders = {\n        \"content-type\": 'application/json',\n        \"authorization\": `Bearer ${getUserToken()}`\n    };\n\n    const options = {\n        // Merge options\n        ...defaultOptions,\n        ...userOptions,\n        // Merge headers\n        headers: {\n            ...defaultHeaders,\n            ...userOptions.headers,\n        },\n    };\n\n    // Build Url\n    const url = `${ API_URL }/${ path }`;\n\n    // Detect is we are uploading a file\n    const isFile = options.body instanceof File;\n\n    // Stringify JSON data\n    // If body is not a file\n    if (options.body && typeof options.body === 'object' && !isFile) {\n        options.body = JSON.stringify(options.body);\n    }\n\n    // Variable which will be used for storing response\n    let response = null;\n\n    return fetch(url, options)\n        .then(responseObject => {\n            // Saving response for later use in lower scopes\n            response = responseObject;\n\n            // HTTP unauthorized\n            if (response.status === 401) {\n                // Handle unauthorized requests\n                // Maybe redirect to login page?\n                return {authError: true}\n            }\n\n            // Get response as json\n            return response.json();\n        })\n        // \"parsedResponse\" will be either text or javascript object depending if\n        // \"response.text()\" or \"response.json()\" got called in the upper scope\n        .then(parsedResponse => {\n\n            // Check for HTTP error codes\n            if (response.status < 200 || response.status >= 300) {\n                // Throw error\n                throw parsedResponse;\n            }\n\n            // Request succeeded\n            return parsedResponse;\n        })\n        .catch(error => {\n            // Throw custom API error\n            // If response exists it means HTTP error occurred\n            if (response) {\n                throw new ApiError(`Request failed with status ${ response.status }.`, error, response.status);\n            } else {\n                throw new ApiError(error.toString(), null, 'REQUEST_FAILED');\n            }\n        });\n};\n\nexport default fetchResource;"],"mappings":"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"},"metadata":{},"sourceType":"module"}